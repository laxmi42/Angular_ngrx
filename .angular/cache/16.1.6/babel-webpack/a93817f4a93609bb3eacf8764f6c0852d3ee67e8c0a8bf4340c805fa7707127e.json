{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction LoginComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 14);\n    i0.ɵɵtext(2, \" email is required \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 14);\n    i0.ɵɵtext(4, \" invalid email id \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"hidden\", !ctx_r0.email.errors.required);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"hidden\", !ctx_r0.email.errors.email);\n  }\n}\nfunction LoginComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n  }\n  ngOnInit() {\n    this.createForm();\n  }\n  createForm() {\n    this.loginForm = this.formBuilder.group({\n      email: new FormControl(['', [Validators.required, Validators.email]]),\n      password: new FormControl(['', [Validators.required]])\n    });\n  }\n  get f() {\n    return this.loginForm.controls;\n  }\n  onLoginSubmit() {\n    console.log(this.loginForm.value);\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 22,\n  vars: 3,\n  consts: [[1, \"card\", \"m-3\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"col\", \"mb-3\"], [\"for\", \"email\"], [\"type\", \"text\", \"id\", \"email\", \"name\", \"email\", \"formControlName\", \"email\"], [4, \"ngIf\"], [1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"password\", 1, \"form-control\"], [1, \"text-center\"], [1, \"btn\", \"btn-primary\", \"me-2\"], [\"type\", \"reset\", 1, \"btn\", \"btn-secondary\"], [3, \"hidden\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h5\", 1);\n      i0.ɵɵtext(2, \"Angular + Reactive Forms - Email Validation\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.onLoginSubmit();\n      });\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"div\", 5)(7, \"p\")(8, \"label\", 6);\n      i0.ɵɵtext(9, \"Email \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(11, LoginComponent_div_11_Template, 5, 2, \"div\", 8);\n      i0.ɵɵelementStart(12, \"p\")(13, \"label\", 9);\n      i0.ɵɵtext(14, \"Passward\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(16, LoginComponent_div_16_Template, 2, 0, \"div\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\", 11)(18, \"button\", 12);\n      i0.ɵɵtext(19, \"Submit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"button\", 13);\n      i0.ɵɵtext(21, \"Reset\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", !ctx.email.valid && (ctx.email.dirty || ctx.email.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginForm.value.password.errors.required);\n    }\n  },\n  dependencies: [i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["FormControl","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r0","email","errors","required","LoginComponent","constructor","formBuilder","ngOnInit","createForm","loginForm","group","password","f","controls","onLoginSubmit","console","log","value","ɵɵdirectiveInject","i1","FormBuilder","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_ngSubmit_4_listener","ɵɵelement","ɵɵtemplate","LoginComponent_div_11_Template","LoginComponent_div_16_Template","valid","dirty","touched"],"sources":["C:\\AngularSampleNgrxProject\\Angular_ngrx\\src\\app\\auth\\login\\login.component.ts","C:\\AngularSampleNgrxProject\\Angular_ngrx\\src\\app\\auth\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\npublic loginForm!:FormGroup\n  constructor(private formBuilder:FormBuilder) { }\n\n  ngOnInit(): void {\n   this.createForm()\n  }\n  createForm(){\n    this.loginForm = this.formBuilder.group({\n\n      email:  new FormControl(['',[Validators.required,Validators.email],]),\n      password: new FormControl(['',\n        [Validators.required],])\n      \n    });\n  }\n  get f() { return this.loginForm.controls; }\n  onLoginSubmit(){\n   console.log(this.loginForm.value);\n    \n  }\n}\n","<!-- main app container -->\n<div class=\"card m-3\">\n  <h5 class=\"card-header\">Angular + Reactive Forms - Email Validation</h5>\n  <div class=\"card-body\">\n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"onLoginSubmit()\">\n          <div class=\"row\">\n              <div class=\"col mb-3\">\n                 \n                  <p>\n                    <label for=\"email\">Email </label>\n                    <input type=\"text\" id=\"email\" name=\"email\" formControlName=\"email\">\n                  </p>\n                  <div *ngIf=\"!email.valid && (email.dirty ||email.touched)\">\n                    <div [hidden]=\"!email.errors.required\">\n                      email is required\n                    </div>\n                    <div [hidden]=\"!email.errors.email\">\n                      invalid email id\n                    </div>\n                  </div>\n                 \n                 \n                  <p>\n                  <label class=\"form-label\">Passward</label>\n                  <input type=\"text\" formControlName=\"password\" class=\"form-control\"  />\n                  <div *ngIf=\"loginForm.value.password.errors.required\" >Password is required</div>\n              </div>\n          </div>\n          <div class=\"text-center\">\n              <button class=\"btn btn-primary me-2\">Submit</button>\n              <button class=\"btn btn-secondary\" type=\"reset\">Reset</button>\n          </div>\n      </form>\n  </div>\n</div>\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
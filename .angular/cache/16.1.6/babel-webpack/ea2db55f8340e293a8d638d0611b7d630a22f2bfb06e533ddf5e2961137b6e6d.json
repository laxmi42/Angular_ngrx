{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport { initialState } from './counter.state';\nimport { custom, decrement, increment, reset } from './counter.action';\nconst _counterReducer = createReducer(initialState, on(increment, state => {\n  console.log(state);\n  console.log(state);\n  let customincrement = 0;\n  if (state.customValue != null && state.customValue != undefined) {\n    customincrement = state.counter + state.customValue;\n  } else {\n    customincrement = state.counter + 1;\n  }\n  return {\n    ...state,\n    counter: customincrement\n  };\n}), on(decrement, state => {\n  return {\n    ...state,\n    counter: state.counter - 1\n  };\n}), on(reset, state => {\n  return {\n    ...state,\n    counter: 0\n  };\n}), on(custom, (state, action) => {\n  console.log(action);\n  return {\n    ...state,\n    counter: 0,\n    customValue: action.value\n  };\n}));\nexport function counterReducer(state, action) {\n  return _counterReducer(state, action);\n}","map":{"version":3,"names":["createReducer","on","initialState","custom","decrement","increment","reset","_counterReducer","state","console","log","customincrement","customValue","undefined","counter","action","value","counterReducer"],"sources":["C:\\d-drive\\angular-sample-application\\src\\app\\couter\\state\\counter.reducer.ts"],"sourcesContent":["\r\nimport { createReducer, on } from '@ngrx/store';\r\nimport {initialState} from './counter.state'\r\nimport { custom, decrement, increment, reset } from './counter.action';\r\n\r\nconst _counterReducer = createReducer(\r\n    initialState,\r\n \r\n    \r\n    on(increment, (state) => {\r\n        console.log(state);\r\nconsole.log(state);\r\nlet customincrement=0;\r\nif(state.customValue!=null&&state.customValue!=undefined){\r\n    customincrement=state.counter + state.customValue\r\n}else{\r\n    customincrement=state.counter+1\r\n}\r\n\r\n      return {\r\n        ...state,\r\n        counter: customincrement,\r\n      };\r\n    }),\r\n    on(decrement, (state) => {\r\n      return {\r\n        ...state,\r\n        counter: state.counter - 1,\r\n      };\r\n    }),\r\n    on(reset, (state) => {\r\n      return {\r\n        ...state,\r\n        counter: 0,\r\n      };\r\n    }),\r\n    on(custom, (state,action) => {\r\nconsole.log(action);\r\n\r\n        return {\r\n          ...state,\r\n          counter: 0,\r\n          customValue:action.value\r\n        };\r\n      })\r\n)\r\n\r\nexport function counterReducer(state:any,action:any) {\r\n    return  _counterReducer(state,action)\r\n}"],"mappings":"AACA,SAASA,aAAa,EAAEC,EAAE,QAAQ,aAAa;AAC/C,SAAQC,YAAY,QAAO,iBAAiB;AAC5C,SAASC,MAAM,EAAEC,SAAS,EAAEC,SAAS,EAAEC,KAAK,QAAQ,kBAAkB;AAEtE,MAAMC,eAAe,GAAGP,aAAa,CACjCE,YAAY,EAGZD,EAAE,CAACI,SAAS,EAAGG,KAAK,IAAI;EACpBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAC1BC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAClB,IAAIG,eAAe,GAAC,CAAC;EACrB,IAAGH,KAAK,CAACI,WAAW,IAAE,IAAI,IAAEJ,KAAK,CAACI,WAAW,IAAEC,SAAS,EAAC;IACrDF,eAAe,GAACH,KAAK,CAACM,OAAO,GAAGN,KAAK,CAACI,WAAW;GACpD,MAAI;IACDD,eAAe,GAACH,KAAK,CAACM,OAAO,GAAC,CAAC;;EAG7B,OAAO;IACL,GAAGN,KAAK;IACRM,OAAO,EAAEH;GACV;AACH,CAAC,CAAC,EACFV,EAAE,CAACG,SAAS,EAAGI,KAAK,IAAI;EACtB,OAAO;IACL,GAAGA,KAAK;IACRM,OAAO,EAAEN,KAAK,CAACM,OAAO,GAAG;GAC1B;AACH,CAAC,CAAC,EACFb,EAAE,CAACK,KAAK,EAAGE,KAAK,IAAI;EAClB,OAAO;IACL,GAAGA,KAAK;IACRM,OAAO,EAAE;GACV;AACH,CAAC,CAAC,EACFb,EAAE,CAACE,MAAM,EAAE,CAACK,KAAK,EAACO,MAAM,KAAI;EAChCN,OAAO,CAACC,GAAG,CAACK,MAAM,CAAC;EAEX,OAAO;IACL,GAAGP,KAAK;IACRM,OAAO,EAAE,CAAC;IACVF,WAAW,EAACG,MAAM,CAACC;GACpB;AACH,CAAC,CAAC,CACP;AAED,OAAM,SAAUC,cAAcA,CAACT,KAAS,EAACO,MAAU;EAC/C,OAAQR,eAAe,CAACC,KAAK,EAACO,MAAM,CAAC;AACzC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
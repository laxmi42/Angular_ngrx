{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport { loginStart } from '../state/auth.action';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@ngrx/store\";\nexport class LoginComponent {\n  constructor(formBuilder, store) {\n    this.formBuilder = formBuilder;\n    this.store = store;\n  }\n  ngOnInit() {\n    this.createForm();\n  }\n  createForm() {\n    this.loginForm = this.formBuilder.group({\n      email: new FormControl(['', [Validators.required, Validators.email]]),\n      password: new FormControl(['', [Validators.required]])\n    });\n  }\n  get f() {\n    return this.loginForm.controls;\n  }\n  onLoginSubmit() {\n    console.log(this.loginForm.value);\n    let email = this.loginForm.value.email;\n    let password = this.loginForm.value.password;\n    this.store.dispatch(loginStart({\n      email,\n      password\n    }));\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Store));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 11,\n  vars: 2,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"email\", \"formControlName\", \"email\", \"name\", \"email\", \"id\", \"email\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"pwd\"], [\"type\", \"password\", \"formControlName\", \"password\", \"name\", \"password\", \"id\", \"pwd\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onLoginSubmit();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n      i0.ɵɵtext(3, \"Email address:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 1)(6, \"label\", 4);\n      i0.ɵɵtext(7, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"button\", 6);\n      i0.ɵɵtext(10, \"Submit\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"disabled\", !ctx.loginForm.valid);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["FormControl","Validators","loginStart","LoginComponent","constructor","formBuilder","store","ngOnInit","createForm","loginForm","group","email","required","password","f","controls","onLoginSubmit","console","log","value","dispatch","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","Store","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","LoginComponent_Template_form_ngSubmit_0_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵproperty","ɵɵadvance","valid"],"sources":["C:\\AngularSampleNgrxProject\\Angular_ngrx\\src\\app\\auth\\login\\login.component.ts","C:\\AngularSampleNgrxProject\\Angular_ngrx\\src\\app\\auth\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { AppState } from 'src/app/app.state';\nimport { loginStart } from '../state/auth.action';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm!: FormGroup;\n  constructor(public formBuilder:FormBuilder, public store:Store<AppState>) { }\n\n  ngOnInit(): void {\n   this.createForm()\n  }\n  createForm(){\n    this.loginForm = this.formBuilder.group({\n\n      email:  new FormControl(['',[Validators.required,Validators.email],]),\n      password: new FormControl(['',\n        [Validators.required],])\n      \n    });\n  }\n  get f() { return this.loginForm.controls; }\n  onLoginSubmit(){\n   console.log(this.loginForm.value);\n   let email=this.loginForm.value.email\n   let password=this.loginForm.value.password\n   this.store.dispatch(loginStart({email,password}),)\n    \n  }\n}\n","<form [formGroup]=\"loginForm\" (ngSubmit)=\"onLoginSubmit();\">\n  <div class=\"form-group\">\n    <label for=\"email\">Email address:</label>\n    <input type=\"email\" formControlName=\"email\" name='email' class=\"form-control\" id=\"email\" required >\n    \n\n  </div>\n  <div class=\"form-group\">\n    <label for=\"pwd\">Password:</label>\n    <input type=\"password\" formControlName=\"password\" name='password' class=\"form-control\" id=\"pwd\" required  >\n  </div>\n  <button [disabled]=\"!loginForm.valid\" type=\"submit\" class=\"btn btn-primary\">Submit</button>\n</form>"],"mappings":"AACA,SAAsBA,WAAW,EAAaC,UAAU,QAAQ,gBAAgB;AAGhF,SAASC,UAAU,QAAQ,sBAAsB;;;;AAOjD,OAAM,MAAOC,cAAc;EAEzBC,YAAmBC,WAAuB,EAASC,KAAqB;IAArD,KAAAD,WAAW,GAAXA,WAAW;IAAqB,KAAAC,KAAK,GAALA,KAAK;EAAoB;EAE5EC,QAAQA,CAAA;IACP,IAAI,CAACC,UAAU,EAAE;EAClB;EACAA,UAAUA,CAAA;IACR,IAAI,CAACC,SAAS,GAAG,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;MAEtCC,KAAK,EAAG,IAAIX,WAAW,CAAC,CAAC,EAAE,EAAC,CAACC,UAAU,CAACW,QAAQ,EAACX,UAAU,CAACU,KAAK,CAAC,CAAE,CAAC;MACrEE,QAAQ,EAAE,IAAIb,WAAW,CAAC,CAAC,EAAE,EAC3B,CAACC,UAAU,CAACW,QAAQ,CAAC,CAAE;KAE1B,CAAC;EACJ;EACA,IAAIE,CAACA,CAAA;IAAK,OAAO,IAAI,CAACL,SAAS,CAACM,QAAQ;EAAE;EAC1CC,aAAaA,CAAA;IACZC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACT,SAAS,CAACU,KAAK,CAAC;IACjC,IAAIR,KAAK,GAAC,IAAI,CAACF,SAAS,CAACU,KAAK,CAACR,KAAK;IACpC,IAAIE,QAAQ,GAAC,IAAI,CAACJ,SAAS,CAACU,KAAK,CAACN,QAAQ;IAC1C,IAAI,CAACP,KAAK,CAACc,QAAQ,CAAClB,UAAU,CAAC;MAACS,KAAK;MAACE;IAAQ,CAAC,CAAC,CAAE;EAEnD;;AAvBWV,cAAc,C;mBAAdA,cAAc,EAAAkB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,KAAA;AAAA;AAAdvB,cAAc,C;QAAdA,cAAc;EAAAwB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCX3BZ,EAAA,CAAAc,cAAA,cAA4D;MAA9Bd,EAAA,CAAAe,UAAA,sBAAAC,iDAAA;QAAA,OAAYH,GAAA,CAAAlB,aAAA,EAAe;MAAA,EAAE;MACzDK,EAAA,CAAAc,cAAA,aAAwB;MACHd,EAAA,CAAAiB,MAAA,qBAAc;MAAAjB,EAAA,CAAAkB,YAAA,EAAQ;MACzClB,EAAA,CAAAmB,SAAA,eAAmG;MAGrGnB,EAAA,CAAAkB,YAAA,EAAM;MACNlB,EAAA,CAAAc,cAAA,aAAwB;MACLd,EAAA,CAAAiB,MAAA,gBAAS;MAAAjB,EAAA,CAAAkB,YAAA,EAAQ;MAClClB,EAAA,CAAAmB,SAAA,eAA2G;MAC7GnB,EAAA,CAAAkB,YAAA,EAAM;MACNlB,EAAA,CAAAc,cAAA,gBAA4E;MAAAd,EAAA,CAAAiB,MAAA,cAAM;MAAAjB,EAAA,CAAAkB,YAAA,EAAS;;;MAXvFlB,EAAA,CAAAoB,UAAA,cAAAP,GAAA,CAAAzB,SAAA,CAAuB;MAWnBY,EAAA,CAAAqB,SAAA,GAA6B;MAA7BrB,EAAA,CAAAoB,UAAA,cAAAP,GAAA,CAAAzB,SAAA,CAAAkC,KAAA,CAA6B"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction LoginComponent_div_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Email is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_5_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Invalid email \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtemplate(1, LoginComponent_div_5_div_1_Template, 2, 0, \"div\", 9);\n    i0.ɵɵtemplate(2, LoginComponent_div_5_div_2_Template, 2, 0, \"div\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.email.hasError[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.email.hasError(\"email\"));\n  }\n}\nexport class LoginComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n  }\n  ngOnInit() {\n    this.createForm();\n  }\n  createForm() {\n    this.signupForm = this.formBuilder.group({\n      email: new FormControl(['', [Validators.required, Validators.email]]),\n      password: new FormControl(['', [Validators.required]])\n    });\n  }\n  get f() {\n    return this.signupForm.controls;\n  }\n  onLoginSubmit() {\n    console.log(this.signupForm.value);\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 12,\n  vars: 3,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"email\", \"formControlName\", \"email\", \"name\", \"email\", \"id\", \"email\", \"required\", \"\", 1, \"form-control\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"for\", \"pwd\"], [\"type\", \"password\", \"formControlName\", \"password\", \"name\", \"password\", \"id\", \"pwd\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"alert\", \"alert-danger\"], [4, \"ngIf\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onLoginSubmit();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n      i0.ɵɵtext(3, \"Email address:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 3);\n      i0.ɵɵtemplate(5, LoginComponent_div_5_Template, 3, 2, \"div\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 1)(7, \"label\", 5);\n      i0.ɵɵtext(8, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"button\", 7);\n      i0.ɵɵtext(11, \"Submit\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.signupForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.f.email.hasError(\"invalid\") && (ctx.f.email.hasError(\"dirty\") || ctx.f.email.hasError(\"touched\")));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"disabled\", !ctx.signupForm.valid);\n    }\n  },\n  dependencies: [i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["FormControl","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","LoginComponent_div_5_div_1_Template","LoginComponent_div_5_div_2_Template","ɵɵadvance","ɵɵproperty","ctx_r0","f","email","hasError","LoginComponent","constructor","formBuilder","ngOnInit","createForm","signupForm","group","required","password","controls","onLoginSubmit","console","log","value","ɵɵdirectiveInject","i1","FormBuilder","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_ngSubmit_0_listener","ɵɵelement","LoginComponent_div_5_Template","valid"],"sources":["C:\\AngularSampleNgrxProject\\Angular_ngrx\\src\\app\\auth\\login\\login.component.ts","C:\\AngularSampleNgrxProject\\Angular_ngrx\\src\\app\\auth\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  signupForm!: FormGroup;\n  constructor(public formBuilder:FormBuilder) { }\n\n  ngOnInit(): void {\n   this.createForm()\n  }\n  createForm(){\n    this.signupForm = this.formBuilder.group({\n\n      email:  new FormControl(['',[Validators.required,Validators.email],]),\n      password: new FormControl(['',\n        [Validators.required],])\n      \n    });\n  }\n  get f() { return this.signupForm.controls; }\n  onLoginSubmit(){\n   console.log(this.signupForm.value);\n    \n  }\n}\n","<form [formGroup]=\"signupForm\" (ngSubmit)=\"onLoginSubmit();\">\n  <div class=\"form-group\">\n    <label for=\"email\">Email address:</label>\n    <input type=\"email\" formControlName=\"email\" name='email' class=\"form-control\" id=\"email\" required >\n    <div *ngIf=\"f.email.hasError('invalid') && \n                (f.email.hasError('dirty') ||f.email.hasError('touched'))\" class=\"alert alert-danger\">\n\n      <div *ngIf=\"f.email.hasError['required']\">\n        Email is required.\n      </div>\n      <div *ngIf=\"f.email.hasError('email')\">\n        Invalid email\n      </div>\n     \n    </div>\n\n  </div>\n  <div class=\"form-group\">\n    <label for=\"pwd\">Password:</label>\n    <input type=\"password\" formControlName=\"password\" name='password' class=\"form-control\" id=\"pwd\" required  >\n  </div>\n  <button [disabled]=\"!signupForm.valid\" type=\"submit\" class=\"btn btn-primary\">Submit</button>\n</form>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
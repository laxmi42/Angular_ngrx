{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n  }\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.required, Validators.email],\n      password: ['', Validators.required,,]\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 2,\n  vars: 0,\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"login works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Validators","LoginComponent","constructor","formBuilder","ngOnInit","loginForm","group","email","required","password","i0","ɵɵdirectiveInject","i1","FormBuilder","selectors","decls","vars","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\AngularSampleNgrxProject\\Angular_ngrx\\src\\app\\auth\\login\\login.component.ts","C:\\AngularSampleNgrxProject\\Angular_ngrx\\src\\app\\auth\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\nloginForm!:FormGroup\n  constructor(private formBuilder:FormBuilder) { }\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n\n      email:  ['',Validators.required,Validators.email,],\n      password: ['',\n        Validators.required,\n      ,\n      ],\n    });\n  }\n\n}\n","<p>login works!</p>\n"],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;AAOnE,OAAM,MAAOC,cAAc;EAEzBC,YAAoBC,WAAuB;IAAvB,KAAAA,WAAW,GAAXA,WAAW;EAAgB;EAE/CC,QAAQA,CAAA;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MAEtCC,KAAK,EAAG,CAAC,EAAE,EAACP,UAAU,CAACQ,QAAQ,EAACR,UAAU,CAACO,KAAK,CAAE;MAClDE,QAAQ,EAAE,CAAC,EAAE,EACXT,UAAU,CAACQ,QAAQ;KAGtB,CAAC;EACJ;;AAbWP,cAAc,C;mBAAdA,cAAc,EAAAS,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;AAAdZ,cAAc,C;QAAdA,cAAc;EAAAa,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCR3BT,EAAA,CAAAW,cAAA,QAAG;MAAAX,EAAA,CAAAY,MAAA,mBAAY;MAAAZ,EAAA,CAAAa,YAAA,EAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction LoginComponent_div_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtemplate(1, LoginComponent_div_10_div_1_Template, 2, 0, \"div\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.loginForm[\"email\"].errors[\"email\"]);\n  }\n}\nfunction LoginComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n  }\n  ngOnInit() {\n    this.createForm();\n  }\n  createForm() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.required, Validators.email],\n      password: ['', Validators.required,,]\n    });\n  }\n  get f() {\n    return this.loginForm.controls;\n  }\n  onLoginSubmit() {\n    console.log(this.loginForm.value);\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 27,\n  vars: 3,\n  consts: [[1, \"card\", \"m-3\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"col\", \"mb-3\"], [1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"email\", 1, \"form-control\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"passward\", 1, \"form-control\"], [4, \"ngIf\"], [1, \"text-center\"], [1, \"btn\", \"btn-primary\", \"me-2\"], [\"type\", \"reset\", 1, \"btn\", \"btn-secondary\"], [\"href\", \"https://jasonwatmore.com/angular-reactive-forms-email-validation-example\", \"target\", \"_top\"], [\"href\", \"https://jasonwatmore.com\", \"target\", \"_top\"], [1, \"invalid-feedback\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h5\", 1);\n      i0.ɵɵtext(2, \"Angular + Reactive Forms - Email Validation\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.onLoginSubmit();\n      });\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"div\", 5)(7, \"label\", 6);\n      i0.ɵɵtext(8, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 7);\n      i0.ɵɵtemplate(10, LoginComponent_div_10_Template, 2, 1, \"div\", 8);\n      i0.ɵɵelementStart(11, \"label\", 6);\n      i0.ɵɵtext(12, \"Passward\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 9);\n      i0.ɵɵtemplate(14, LoginComponent_div_14_Template, 2, 0, \"div\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 11)(16, \"button\", 12);\n      i0.ɵɵtext(17, \"Submit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"button\", 13);\n      i0.ɵɵtext(19, \"Reset\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(20, \"div\", 11)(21, \"p\")(22, \"a\", 14);\n      i0.ɵɵtext(23, \"Angular + Reactive Forms - Email Validation Example\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"p\")(25, \"a\", 15);\n      i0.ɵɵtext(26, \"JasonWatmore.com\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginForm[\"email\"].errors[\"required\"]);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginForm[\"passward\"].errors[\"passward\"]);\n    }\n  },\n  dependencies: [i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","LoginComponent_div_10_div_1_Template","ɵɵadvance","ɵɵproperty","ctx_r0","loginForm","errors","LoginComponent","constructor","formBuilder","ngOnInit","createForm","group","email","required","password","f","controls","onLoginSubmit","console","log","value","ɵɵdirectiveInject","i1","FormBuilder","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_ngSubmit_4_listener","ɵɵelement","LoginComponent_div_10_Template","LoginComponent_div_14_Template"],"sources":["C:\\AngularSampleNgrxProject\\Angular_ngrx\\src\\app\\auth\\login\\login.component.ts","C:\\AngularSampleNgrxProject\\Angular_ngrx\\src\\app\\auth\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\npublic loginForm!:FormGroup\n  constructor(private formBuilder:FormBuilder) { }\n\n  ngOnInit(): void {\n   this.createForm()\n  }\n  createForm(){\n    this.loginForm = this.formBuilder.group({\n\n      email:  ['',Validators.required,Validators.email,],\n      password: ['',\n        Validators.required,\n      ,\n      ],\n    });\n  }\n  get f() { return this.loginForm.controls; }\n  onLoginSubmit(){\n   console.log(this.loginForm.value);\n    \n  }\n}\n","<!-- main app container -->\n<div class=\"card m-3\">\n  <h5 class=\"card-header\">Angular + Reactive Forms - Email Validation</h5>\n  <div class=\"card-body\">\n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"onLoginSubmit()\">\n          <div class=\"row\">\n              <div class=\"col mb-3\">\n                  <label class=\"form-label\">Email</label>\n                  <input type=\"text\" formControlName=\"email\" class=\"form-control\"  />\n                  <div *ngIf=\"loginForm['email'].errors['required']\"  class=\"invalid-feedback\">\n                      <div *ngIf=\"loginForm['email'].errors['email']\" >Email is required</div>\n                      <!-- <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div> -->\n                  </div>\n                  <label class=\"form-label\">Passward</label>\n                  <input type=\"text\" formControlName=\"passward\" class=\"form-control\"  />\n                  <div *ngIf=\"loginForm['passward'].errors['passward']\" >Password is required</div>\n              </div>\n          </div>\n          <div class=\"text-center\">\n              <button class=\"btn btn-primary me-2\">Submit</button>\n              <button class=\"btn btn-secondary\" type=\"reset\">Reset</button>\n          </div>\n      </form>\n  </div>\n</div>\n\n<!-- credits -->\n<div class=\"text-center\">\n  <p>\n      <a href=\"https://jasonwatmore.com/angular-reactive-forms-email-validation-example\" target=\"_top\">Angular + Reactive Forms - Email Validation Example</a>\n  </p>\n  <p>\n      <a href=\"https://jasonwatmore.com\" target=\"_top\">JasonWatmore.com</a>\n  </p>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class AddPostComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n  }\n  ngOnInit() {\n    this.postForm = this.formBuilder.group({\n      title: [Validators.required, Validators.minLength(6)],\n      description: [Validators.required, Validators.minLength(10)]\n    });\n  }\n  updateUserProfile() {}\n  // showDescriptionErrors() {\n  //   const descriptionForm = this.postForm.get('description');\n  //   if (descriptionForm?.touched && !descriptionForm.valid) {\n  //     if (descriptionForm.errors.) {\n  //       return 'Description is required';\n  //     }\n  //     if (descriptionForm.errors && descriptionForm.errors. ) {\n  //       return 'Description should be of minimum 10 characters length';\n  //     }\n  //   }\n  // }\n  onAddPost() {\n    console.log(this.postForm.value);\n  }\n}\nAddPostComponent.ɵfac = function AddPostComponent_Factory(t) {\n  return new (t || AddPostComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nAddPostComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddPostComponent,\n  selectors: [[\"app-add-post\"]],\n  decls: 15,\n  vars: 2,\n  consts: [[3, \"formGroup\", \"submit\"], [\"type\", \"text\", \"formControlName\", \"title\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"description\", 1, \"form-control\"], [\"type\", \"submit\"]],\n  template: function AddPostComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"add-post works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"submit\", function AddPostComponent_Template_form_submit_2_listener() {\n        return ctx.onAddPost();\n      });\n      i0.ɵɵelementStart(3, \"div\")(4, \"label\");\n      i0.ɵɵtext(5, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\")(8, \"label\");\n      i0.ɵɵtext(9, \"description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"textarea\", 2);\n      i0.ɵɵtext(11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\")(13, \"button\", 3);\n      i0.ɵɵtext(14, \"Add Post\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.postForm);\n      i0.ɵɵadvance(9);\n      i0.ɵɵtextInterpolate1(\" \", ctx.showDescriptionErrors(), \"\\n\");\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Validators","AddPostComponent","constructor","formBuilder","ngOnInit","postForm","group","title","required","minLength","description","updateUserProfile","onAddPost","console","log","value","i0","ɵɵdirectiveInject","i1","FormBuilder","selectors","decls","vars","consts","template","AddPostComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AddPostComponent_Template_form_submit_2_listener","ɵɵelement","ɵɵadvance","ɵɵproperty","ɵɵtextInterpolate1","showDescriptionErrors"],"sources":["C:\\d-drive\\angular-sample-application\\src\\app\\posts\\add-post\\add-post.component.ts","C:\\d-drive\\angular-sample-application\\src\\app\\posts\\add-post\\add-post.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-add-post',\n  templateUrl: './add-post.component.html',\n  styleUrls: ['./add-post.component.css']\n})\nexport class AddPostComponent {\n  public postForm!: FormGroup;\n   \n  \n  constructor(private formBuilder: FormBuilder){\n \n  }\n  ngOnInit():void{\n    this.postForm = this.formBuilder.group({\n\n      title:  [Validators.required,Validators.minLength(6),],\n      description: [\n        Validators.required,\n        Validators.minLength(10),\n      ],\n    });\n\n  }\n  public updateUserProfile(): void {\n  }\n  // showDescriptionErrors() {\n  //   const descriptionForm = this.postForm.get('description');\n  //   if (descriptionForm?.touched && !descriptionForm.valid) {\n  //     if (descriptionForm.errors.) {\n  //       return 'Description is required';\n  //     }\n\n  //     if (descriptionForm.errors && descriptionForm.errors. ) {\n  //       return 'Description should be of minimum 10 characters length';\n  //     }\n  //   }\n  // }\n  onAddPost(){\nconsole.log(this.postForm.value);\n\n  }\n}\n","<p>add-post works!</p>\n<form [formGroup]=\"postForm\" (submit)=\"onAddPost()\">\n    <div>\n    <label>Title</label>\n    <input type=\"text\" class=\"form-control\" formControlName=\"title\"/>\n</div>\n<div>\n    <label>description</label>\n    <textarea type=\"text\" class=\"form-control\" formControlName=\"description\"></textarea>\n    {{showDescriptionErrors()}}\n</div>\n<div>\n    <button type=\"submit\">Add Post</button>\n</div>\n</form>\n\n"],"mappings":"AACA,SAA8CA,UAAU,QAAQ,gBAAgB;;;AAOhF,OAAM,MAAOC,gBAAgB;EAI3BC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;EAE/B;EACAC,QAAQA,CAAA;IACN,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MAErCC,KAAK,EAAG,CAACP,UAAU,CAACQ,QAAQ,EAACR,UAAU,CAACS,SAAS,CAAC,CAAC,CAAC,CAAE;MACtDC,WAAW,EAAE,CACXV,UAAU,CAACQ,QAAQ,EACnBR,UAAU,CAACS,SAAS,CAAC,EAAE,CAAC;KAE3B,CAAC;EAEJ;EACOE,iBAAiBA,CAAA,GACxB;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACAC,SAASA,CAAA;IACXC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACT,QAAQ,CAACU,KAAK,CAAC;EAE9B;;AAnCWd,gBAAgB,C;mBAAhBA,gBAAgB,EAAAe,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;AAAhBlB,gBAAgB,C;QAAhBA,gBAAgB;EAAAmB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCR7BV,EAAA,CAAAY,cAAA,QAAG;MAAAZ,EAAA,CAAAa,MAAA,sBAAe;MAAAb,EAAA,CAAAc,YAAA,EAAI;MACtBd,EAAA,CAAAY,cAAA,cAAoD;MAAvBZ,EAAA,CAAAe,UAAA,oBAAAC,iDAAA;QAAA,OAAUL,GAAA,CAAAf,SAAA,EAAW;MAAA,EAAC;MAC/CI,EAAA,CAAAY,cAAA,UAAK;MACEZ,EAAA,CAAAa,MAAA,YAAK;MAAAb,EAAA,CAAAc,YAAA,EAAQ;MACpBd,EAAA,CAAAiB,SAAA,eAAiE;MACrEjB,EAAA,CAAAc,YAAA,EAAM;MACNd,EAAA,CAAAY,cAAA,UAAK;MACMZ,EAAA,CAAAa,MAAA,kBAAW;MAAAb,EAAA,CAAAc,YAAA,EAAQ;MAC1Bd,EAAA,CAAAiB,SAAA,mBAAoF;MACpFjB,EAAA,CAAAa,MAAA,IACJ;MAAAb,EAAA,CAAAc,YAAA,EAAM;MACNd,EAAA,CAAAY,cAAA,WAAK;MACqBZ,EAAA,CAAAa,MAAA,gBAAQ;MAAAb,EAAA,CAAAc,YAAA,EAAS;;;MAXrCd,EAAA,CAAAkB,SAAA,GAAsB;MAAtBlB,EAAA,CAAAmB,UAAA,cAAAR,GAAA,CAAAtB,QAAA,CAAsB;MAQxBW,EAAA,CAAAkB,SAAA,GACJ;MADIlB,EAAA,CAAAoB,kBAAA,MAAAT,GAAA,CAAAU,qBAAA,SACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}
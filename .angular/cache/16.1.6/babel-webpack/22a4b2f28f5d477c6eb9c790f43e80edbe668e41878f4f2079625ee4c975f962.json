{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction LoginComponent_div_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Email is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_10_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Invalid Email\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, LoginComponent_div_10_div_1_Template, 2, 0, \"div\", 5);\n    i0.ɵɵtemplate(2, LoginComponent_div_10_div_2_Template, 2, 0, \"div\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.loginForm.get(\"email\").errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.loginForm.get(\"email\").errors.email);\n  }\n}\nfunction LoginComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\");\n    i0.ɵɵtext(2, \"Password is required\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class LoginComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n  }\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.required, Validators.email],\n      password: ['', Validators.required,,]\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 19,\n  vars: 4,\n  consts: [[1, \"row\"], [1, \"col-md-6\", \"offset-md-3\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"type\", \"text\", \"formControlName\", \"email\", 1, \"form-control\"], [4, \"ngIf\"], [\"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h3\");\n      i0.ɵɵtext(3, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"hr\");\n      i0.ɵɵelementStart(5, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.onLoginSubmit();\n      });\n      i0.ɵɵelementStart(6, \"div\", 3)(7, \"label\");\n      i0.ɵɵtext(8, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 4);\n      i0.ɵɵtemplate(10, LoginComponent_div_10_Template, 3, 2, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 3)(12, \"label\");\n      i0.ɵɵtext(13, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 6);\n      i0.ɵɵtemplate(15, LoginComponent_div_15_Template, 3, 0, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 3)(17, \"button\", 7);\n      i0.ɵɵtext(18, \" Login \");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginForm.get(\"email\").touched && !ctx.loginForm.get(\"email\").valid);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginForm.get(\"password\").touched && !ctx.loginForm.get(\"password\").valid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", !ctx.loginForm.valid);\n    }\n  },\n  dependencies: [i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","LoginComponent_div_10_div_1_Template","LoginComponent_div_10_div_2_Template","ɵɵadvance","ɵɵproperty","ctx_r0","loginForm","get","errors","required","email","LoginComponent","constructor","formBuilder","ngOnInit","group","password","ɵɵdirectiveInject","i1","FormBuilder","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","LoginComponent_Template_form_ngSubmit_5_listener","onLoginSubmit","LoginComponent_div_10_Template","LoginComponent_div_15_Template","touched","valid"],"sources":["C:\\AngularSampleNgrxProject\\Angular_ngrx\\src\\app\\auth\\login\\login.component.ts","C:\\AngularSampleNgrxProject\\Angular_ngrx\\src\\app\\auth\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\nloginForm!:FormGroup\n  constructor(private formBuilder:FormBuilder) { }\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n\n      email:  ['',Validators.required,Validators.email,],\n      password: ['',\n        Validators.required,\n      ,\n      ],\n    });\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-6 offset-md-3\">\n      <h3>Login</h3>\n      <hr />\n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"onLoginSubmit()\">\n        <div class=\"mb-3\">\n          <label>Email</label>\n          <input type=\"text\" class=\"form-control\" formControlName=\"email\" />\n          <div\n            *ngIf=\"\n              loginForm.get('email').touched && !loginForm.get('email').valid\n            \"\n          >\n            <div *ngIf=\"loginForm.get('email').errors.required\">\n              Email is required\n            </div>\n            <div *ngIf=\"loginForm.get('email').errors.email\">Invalid Email</div>\n          </div>\n        </div>\n        <div class=\"mb-3\">\n          <label>Password</label>\n          <input\n            type=\"password\"\n            class=\"form-control\"\n            formControlName=\"password\"\n          />\n          <div\n            *ngIf=\"\n              loginForm.get('password').touched &&\n              !loginForm.get('password').valid\n            \"\n          >\n            <div>Password is required</div>\n          </div>\n        </div>\n  \n        <div class=\"mb-3\">\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary\"\n            [disabled]=\"!loginForm.valid\"\n          >\n            Login\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
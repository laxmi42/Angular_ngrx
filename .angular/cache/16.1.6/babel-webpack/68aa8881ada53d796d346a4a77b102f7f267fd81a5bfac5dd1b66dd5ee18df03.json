{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n  }\n  login(username, password) {\n    return this.http.post(`https://dummyjson.com/auth/login`, {\n      username,\n      password,\n      returnSecureToken: true\n    });\n  }\n  formatUser(data) {\n    const user = {\n      email: data.email,\n      token: data.token,\n      username: data.email\n    };\n    return user;\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AuthService","constructor","http","login","username","password","post","returnSecureToken","formatUser","data","user","email","token","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\AngularSampleNgrxProject\\Angular_ngrx\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { environment } from \"../environment\";\r\nimport { Observable } from \"rxjs\";\r\nimport { AuthResponse } from \"../models/AuthResponseData.model\";\r\nimport { User } from \"../models/User.model\";\r\n@Injectable({\r\n    providedIn:'root'\r\n})\r\n\r\nexport class AuthService{\r\n \r\n    constructor(private http:HttpClient){\r\n\r\n    }\r\n   \r\n      login(username:string,password:string):Observable<AuthResponse>{\r\n       return  this.http.post<AuthResponse>(`https://dummyjson.com/auth/login`,{username,password,returnSecureToken:true})\r\n    }\r\n    \r\n    formatUser(data: AuthResponse) {\r\n        const user={\r\n              email:data.email,\r\n        token:data.token,\r\n         username:data.email\r\n        }\r\n       \r\n        return user;\r\n      }\r\n   \r\n}"],"mappings":";;AAUA,OAAM,MAAOA,WAAW;EAEpBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;EAExB;EAEEC,KAAKA,CAACC,QAAe,EAACC,QAAe;IACpC,OAAQ,IAAI,CAACH,IAAI,CAACI,IAAI,CAAe,kCAAkC,EAAC;MAACF,QAAQ;MAACC,QAAQ;MAACE,iBAAiB,EAAC;IAAI,CAAC,CAAC;EACtH;EAEAC,UAAUA,CAACC,IAAkB;IACzB,MAAMC,IAAI,GAAC;MACLC,KAAK,EAACF,IAAI,CAACE,KAAK;MACtBC,KAAK,EAACH,IAAI,CAACG,KAAK;MACfR,QAAQ,EAACK,IAAI,CAACE;KACd;IAED,OAAOD,IAAI;EACb;;AAlBOV,WAAW,C;mBAAXA,WAAW,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXhB,WAAW,C;SAAXA,WAAW;EAAAiB,OAAA,EAAXjB,WAAW,CAAAkB,IAAA;EAAAC,UAAA,EAHT;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createReducer, on } from \"@ngrx/store\";\nimport { initialState } from \"./post.state\";\nimport { addPost, deletePost, updatePost } from \"./post.actions\";\nconst _postReducer = createReducer(initialState, on(addPost, (state, action) => {\n  console.log(action.post);\n  let post = {\n    ...action.post\n  };\n  post.id = state.posts.length + 1;\n  return {\n    ...state,\n    posts: [...state.posts, post]\n  };\n}), on(updatePost, (state, action) => {\n  const updatePost = state.posts.map(data => {\n    return data.id === action.post.id ? action.post : data;\n  });\n  return {\n    ...state,\n    posts: updatePost\n  };\n}), on(deletePost, (state, action) => {\n  console.log(action);\n  const deletepost = state.posts.filter((post, i) => {\n    console.log(i);\n    return post.id === action.id ? state.posts.splice(i, 1) : post;\n  });\n  return {\n    ...state,\n    posts: deletepost\n  };\n}));\nexport function postReducer(state, action) {\n  return _postReducer(state, action);\n}","map":{"version":3,"names":["createReducer","on","initialState","addPost","deletePost","updatePost","_postReducer","state","action","console","log","post","id","posts","length","map","data","deletepost","filter","i","splice","postReducer"],"sources":["C:\\AngularSampleNgrxProject\\Angular_ngrx\\src\\app\\posts\\state\\post.reducer.ts"],"sourcesContent":["import { createReducer, on } from \"@ngrx/store\"\r\nimport { initialState } from \"./post.state\"\r\nimport { state } from \"@angular/animations\"\r\nimport { addPost, deletePost, updatePost } from \"./post.actions\"\r\n\r\n\r\nconst _postReducer=createReducer(initialState,\r\n  on(addPost,(state,action)=>{\r\n\r\n  console.log(action.post);\r\n  let post={\r\n    ...action.post\r\n  }\r\n  post.id=state.posts.length+1\r\n    return {\r\n     ...state,\r\n    posts: [...state.posts,post]\r\n\r\n    }\r\n\r\n}),\r\non(updatePost,(state,action)=>{\r\n  \r\n  const updatePost=state.posts.map((data:any)=>{\r\n  return (data.id===action.post.id)?action.post:data\r\n  })\r\n  return {\r\n    ...state,\r\nposts:updatePost\r\n  }\r\n\r\n}),\r\non(deletePost,(state,action)=>{\r\n  console.log(action);\r\n  \r\n  const deletepost=state.posts.filter((post,i)=>{\r\n    console.log(i);\r\n    \r\n    return(\r\n    post.id===action.id)?state.posts.splice(i,1):post})\r\n  return {\r\n    ...state,\r\n    posts:deletepost\r\n  }\r\n})\r\n)\r\n   \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function postReducer(state:any,action:any){\r\n    return _postReducer(state,action)\r\n}"],"mappings":"AAAA,SAASA,aAAa,EAAEC,EAAE,QAAQ,aAAa;AAC/C,SAASC,YAAY,QAAQ,cAAc;AAE3C,SAASC,OAAO,EAAEC,UAAU,EAAEC,UAAU,QAAQ,gBAAgB;AAGhE,MAAMC,YAAY,GAACN,aAAa,CAACE,YAAY,EAC3CD,EAAE,CAACE,OAAO,EAAC,CAACI,KAAK,EAACC,MAAM,KAAG;EAE3BC,OAAO,CAACC,GAAG,CAACF,MAAM,CAACG,IAAI,CAAC;EACxB,IAAIA,IAAI,GAAC;IACP,GAAGH,MAAM,CAACG;GACX;EACDA,IAAI,CAACC,EAAE,GAACL,KAAK,CAACM,KAAK,CAACC,MAAM,GAAC,CAAC;EAC1B,OAAO;IACN,GAAGP,KAAK;IACTM,KAAK,EAAE,CAAC,GAAGN,KAAK,CAACM,KAAK,EAACF,IAAI;GAE1B;AAEL,CAAC,CAAC,EACFV,EAAE,CAACI,UAAU,EAAC,CAACE,KAAK,EAACC,MAAM,KAAG;EAE5B,MAAMH,UAAU,GAACE,KAAK,CAACM,KAAK,CAACE,GAAG,CAAEC,IAAQ,IAAG;IAC7C,OAAQA,IAAI,CAACJ,EAAE,KAAGJ,MAAM,CAACG,IAAI,CAACC,EAAE,GAAEJ,MAAM,CAACG,IAAI,GAACK,IAAI;EAClD,CAAC,CAAC;EACF,OAAO;IACL,GAAGT,KAAK;IACZM,KAAK,EAACR;GACH;AAEH,CAAC,CAAC,EACFJ,EAAE,CAACG,UAAU,EAAC,CAACG,KAAK,EAACC,MAAM,KAAG;EAC5BC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EAEnB,MAAMS,UAAU,GAACV,KAAK,CAACM,KAAK,CAACK,MAAM,CAAC,CAACP,IAAI,EAACQ,CAAC,KAAG;IAC5CV,OAAO,CAACC,GAAG,CAACS,CAAC,CAAC;IAEd,OACAR,IAAI,CAACC,EAAE,KAAGJ,MAAM,CAACI,EAAE,GAAEL,KAAK,CAACM,KAAK,CAACO,MAAM,CAACD,CAAC,EAAC,CAAC,CAAC,GAACR,IAAI;EAAA,CAAC,CAAC;EACrD,OAAO;IACL,GAAGJ,KAAK;IACRM,KAAK,EAACI;GACP;AACH,CAAC,CAAC,CACD;AASD,OAAM,SAAUI,WAAWA,CAACd,KAAS,EAACC,MAAU;EAC5C,OAAOF,YAAY,CAACC,KAAK,EAACC,MAAM,CAAC;AACrC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
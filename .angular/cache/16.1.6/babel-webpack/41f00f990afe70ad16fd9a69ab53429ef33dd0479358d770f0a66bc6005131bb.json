{"ast":null,"code":"import { getPosts } from '../state/post.selector';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/router\";\nfunction PostListsComponent_table_5_tr_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const post_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(post_r2.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(post_r2.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(post_r2.description);\n  }\n}\nfunction PostListsComponent_table_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\")(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"ID\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Title\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Description\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"tbody\");\n    i0.ɵɵtemplate(10, PostListsComponent_table_5_tr_10_Template, 7, 3, \"tr\", 8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.posts);\n  }\n}\nconst _c0 = function () {\n  return [\"/post-lists/add-post\"];\n};\nexport class PostListsComponent {\n  constructor(store) {\n    this.store = store;\n  }\n  ngOnInit() {\n    this.store.select(getPosts).subscribe(res => {\n      console.log(res);\n      this.posts = res;\n    });\n    this.postForm = new FormGroup({\n      title: new FormControl(null, [Validators.required, Validators.minLength(6)]),\n      description: new FormControl(null, [Validators.required])\n    });\n  }\n  onAddPost() {\n    console.log(this.postForm.value);\n  }\n}\nPostListsComponent.ɵfac = function PostListsComponent_Factory(t) {\n  return new (t || PostListsComponent)(i0.ɵɵdirectiveInject(i1.Store));\n};\nPostListsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PostListsComponent,\n  selectors: [[\"app-post-lists\"]],\n  decls: 17,\n  vars: 4,\n  consts: [[3, \"routerLink\"], [4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"first-name\"], [\"id\", \"first-name\", \"type\", \"text\", \"formControlName\", \"title\"], [\"for\", \"last-name\"], [\"id\", \"last-name\", \"type\", \"text\", \"formControlName\", \"description\"], [\"type\", \"submit\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function PostListsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"post-lists works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\")(3, \"button\", 0);\n      i0.ɵɵtext(4, \"Add Post\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(5, PostListsComponent_table_5_Template, 11, 1, \"table\", 1);\n      i0.ɵɵelementStart(6, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function PostListsComponent_Template_form_ngSubmit_6_listener() {\n        return ctx.onAddPost();\n      });\n      i0.ɵɵelementStart(7, \"label\", 3);\n      i0.ɵɵtext(8, \"First Name: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 4);\n      i0.ɵɵelementStart(10, \"label\", 5);\n      i0.ɵɵtext(11, \"Last Name: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 6);\n      i0.ɵɵelementStart(13, \"button\", 7);\n      i0.ɵɵtext(14, \"submit\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\");\n      i0.ɵɵelement(16, \"router-outlet\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(3, _c0));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.posts);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.postForm);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i4.RouterOutlet, i4.RouterLink],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["getPosts","FormControl","FormGroup","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","post_r2","id","title","description","ɵɵtemplate","PostListsComponent_table_5_tr_10_Template","ɵɵproperty","ctx_r0","posts","PostListsComponent","constructor","store","ngOnInit","select","subscribe","res","console","log","postForm","required","minLength","onAddPost","value","ɵɵdirectiveInject","i1","Store","selectors","decls","vars","consts","template","PostListsComponent_Template","rf","ctx","PostListsComponent_table_5_Template","ɵɵlistener","PostListsComponent_Template_form_ngSubmit_6_listener","ɵɵelement","ɵɵpureFunction0","_c0"],"sources":["C:\\d-drive\\angular-sample-application\\src\\app\\posts\\post-lists\\post-lists.component.ts","C:\\d-drive\\angular-sample-application\\src\\app\\posts\\post-lists\\post-lists.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { AppState } from 'src/app/app.state';\nimport { getPosts } from '../state/post.selector';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-post-lists',\n  templateUrl: './post-lists.component.html',\n  styleUrls: ['./post-lists.component.css']\n})\nexport class PostListsComponent {\n  posts:any\n  public postForm!: FormGroup;\n  constructor(private store: Store<AppState>){\n\n  }\nngOnInit():void{\nthis.store.select(getPosts).subscribe((res)=>{\n  console.log(res);\n  this.posts=res\n  \n})\n  this.postForm= new FormGroup({\n  title: new FormControl(null,[ Validators.required,Validators.minLength(6)]),\n  description: new FormControl(null,[Validators.required])\n})\n}\nonAddPost(){\n  console.log(this.postForm.value);\n  \n    }\n}\n","<p>post-lists works!</p>\n<!-- can give in condition in this format even -->\n<!-- <table*ngIf=\"posts |  async as postsData\"></table> -->\n<div>\n    <button [routerLink]=\"['/post-lists/add-post']\">Add Post</button>\n</div>\n<table *ngIf=\"posts\">\n    <thead>\n        <tr>\n            <th>ID</th>\n            <th>Title</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n        <tbody>\n            <tr *ngFor=\"let post of posts\"> \n                <td>{{post.id}}</td>\n                <td>{{post.title}}</td>\n                <td>{{post.description}}</td>\n            </tr>\n        </tbody>\n    \n</table>\n<form [formGroup]=\"postForm\" (ngSubmit)=\"onAddPost()\">\n\n    <label for=\"first-name\">First Name: </label>\n    <input id=\"first-name\" type=\"text\" formControlName=\"title\">\n  \n    <label for=\"last-name\">Last Name: </label>\n    <input id=\"last-name\" type=\"text\" formControlName=\"description\">\n  <button type=\"submit\">submit</button>\n  </form>\n<div>\n    <router-outlet></router-outlet>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}